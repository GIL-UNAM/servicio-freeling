#!/bin/sh
### BEGIN INIT INFO
# Provides:          servicio-freeling
# Required-Start:    $remote_fs $syslog $network
# Required-Stop:     $remote_fs $syslog $network
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: FreeLing analyzer multi-instances
# Description:       Start multiple FreeLing analyzer servers on fixed ports
### END INIT INFO

set -e

PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
DAEMON=/usr/bin/analyzer
NAME=servicio-freeling
DESC="FreeLing analyzer cluster"
RUN_AS=freeling

FREELINGSHARE=/usr/share/freeling
CFG_BASE=/var/www/html/servicio-freeling
RUNDIR=/run/$NAME

. /lib/lsb/init-functions

INSTANCES="
9999 tagged ${CFG_BASE}/analyzer.cfg
9995 tagged ${CFG_BASE}/analyzer_en.cfg
9994 tagged ${CFG_BASE}/analyzer_fr.cfg
9998 parsed ${CFG_BASE}/analyzer.cfg
9993 parsed ${CFG_BASE}/analyzer_en.cfg
9992 parsed ${CFG_BASE}/analyzer_fr.cfg
9997 dep    ${CFG_BASE}/analyzer.cfg
9996 dep    ${CFG_BASE}/analyzer_en.cfg
9991 dep    ${CFG_BASE}/analyzer_fr.cfg
"

do_start() {
    mkdir -p "$RUNDIR"
    chown $RUN_AS:$RUN_AS "$RUNDIR" || true

    echo "$INSTANCES" | while read -r PORT OUTLV CFG; do
        [ -z "$PORT" ] && continue
        PIDFILE="$RUNDIR/${PORT}.pid"
        start-stop-daemon --start --quiet --background \
            --make-pidfile --pidfile "$PIDFILE" \
            --chuid $RUN_AS \
            --exec /usr/bin/env -- FREELINGSHARE="$FREELINGSHARE" "$DAEMON" \
            --server -p "$PORT" --outlv "$OUTLV" -f "$CFG"
        echo "Started analyzer on port $PORT ($OUTLV)"
    done
}

do_stop() {
    RET=0
    for pidf in "$RUNDIR"/*.pid; do
        [ -e "$pidf" ] || continue
        start-stop-daemon --stop --retry=TERM/5/KILL/5 --pidfile "$pidf" || RET=$?
        rm -f "$pidf"
    done
    return $RET
}

do_status() {
    for pidf in "$RUNDIR"/*.pid; do
        [ -e "$pidf" ] || continue
        PORT=$(basename "$pidf" .pid)
        if start-stop-daemon --status --pidfile "$pidf" >/dev/null 2>&1; then
            echo "analyzer port $PORT: running (pid $(cat "$pidf"))"
        else
            echo "analyzer port $PORT: not running"
        fi
    done
}


case "$1" in
  start)
    log_daemon_msg "Starting $DESC" "$NAME"
    do_start
    log_end_msg $?
    ;;
  stop)
    log_daemon_msg "Stopping $DESC" "$NAME"
    do_stop
    log_end_msg $?
    ;;
  restart|force-reload)
    $0 stop || true
    $0 start
    ;;
  status)
    do_status
    ;;
  *)
    echo "Usage: /etc/init.d/$NAME {start|stop|restart|status}"
    exit 1
    ;;
esac

exit 0
